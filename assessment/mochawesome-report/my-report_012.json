{
  "stats": {
    "suites": 1,
    "tests": 8,
    "passes": 4,
    "pending": 0,
    "failures": 4,
    "start": "2025-08-02T10:45:50.800Z",
    "end": "2025-08-02T10:45:55.900Z",
    "duration": 5100,
    "testsRegistered": 8,
    "passPercent": 50,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "cbdc38e3-4906-415f-aed6-ec4021d9e8ef",
      "title": "",
      "fullFile": "cypress\\integration\\backend\\backendTests.spec.js",
      "file": "cypress\\integration\\backend\\backendTests.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "479ffb9c-6a66-4b98-a33c-d4750cfbdbaa",
          "title": "Backend API Tests for Employee and Admin Role",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should register a new employee",
              "fullTitle": "Backend API Tests for Employee and Admin Role should register a new employee",
              "timedOut": null,
              "duration": 643,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request(\"POST\", `${apiUrl}/auth/register`, {\n  username: employeeUsername,\n  // Use the dynamically generated username\n  password: employeePassword\n}).then(response => {\n  expect(response.status).to.eq(201);\n  expect(response.body).to.have.property(\"message\", \"User registered successfully\");\n});",
              "err": {},
              "uuid": "95b12bca-3787-444a-b4f0-442c883e6f13",
              "parentUUID": "479ffb9c-6a66-4b98-a33c-d4750cfbdbaa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should login the employee with valid credentials",
              "fullTitle": "Backend API Tests for Employee and Admin Role should login the employee with valid credentials",
              "timedOut": null,
              "duration": 459,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request(\"POST\", `${apiUrl}/auth/login`, {\n  username: employeeUsername,\n  // Use the same username as registration\n  password: employeePassword // Use the same password as registration\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property(\"token\");\n  Cypress.env(\"employeeAuthToken\", response.body.token); // Store token in Cypress environment variable\n});",
              "err": {},
              "uuid": "71b9a879-84b6-4593-a0f0-cfc58a361d60",
              "parentUUID": "479ffb9c-6a66-4b98-a33c-d4750cfbdbaa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit resignation for an employee",
              "fullTitle": "Backend API Tests for Employee and Admin Role should submit resignation for an employee",
              "timedOut": null,
              "duration": 1011,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const token = Cypress.env(\"employeeAuthToken\"); // Retrieve token from Cypress environment variable\ncy.request({\n  method: \"POST\",\n  url: `${apiUrl}/user/resign`,\n  headers: {\n    Authorization: `${token}`\n  },\n  body: {\n    lwd: \"2024-12-26\"\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  employeeResignationId = response.body.data.resignation._id; // Store resignation ID for approval\n});",
              "err": {
                "message": "AssertionError: expected 201 to equal 200",
                "estack": "AssertionError: expected 201 to equal 200\n    at Context.eval (webpack://assessment/./cypress/integration/backend/backendTests.spec.js:44:33)",
                "diff": "- 201\n+ 200\n"
              },
              "uuid": "35f3aea0-95d3-49b4-a126-0742769decc1",
              "parentUUID": "479ffb9c-6a66-4b98-a33c-d4750cfbdbaa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should login as admin (HR)",
              "fullTitle": "Backend API Tests for Employee and Admin Role should login as admin (HR)",
              "timedOut": null,
              "duration": 260,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request(\"POST\", `${apiUrl}/auth/login`, {\n  username: \"admin\",\n  password: \"admin\"\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property(\"token\");\n  Cypress.env(\"adminAuthToken\", response.body.token); // Store admin token in Cypress environment variable\n});",
              "err": {},
              "uuid": "be7e0b1f-e07f-427d-818a-5d9725d69179",
              "parentUUID": "479ffb9c-6a66-4b98-a33c-d4750cfbdbaa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should view all resignations submitted by employees as admin",
              "fullTitle": "Backend API Tests for Employee and Admin Role should view all resignations submitted by employees as admin",
              "timedOut": null,
              "duration": 245,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const token = Cypress.env(\"adminAuthToken\"); // Retrieve admin token from Cypress environment variable\ncy.request({\n  method: \"GET\",\n  url: `${apiUrl}/admin/resignations`,\n  headers: {\n    Authorization: `${token}`\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body.data).to.be.an(\"array\");\n});",
              "err": {},
              "uuid": "338f84c3-56f4-45e7-afbb-4ed95572d1df",
              "parentUUID": "479ffb9c-6a66-4b98-a33c-d4750cfbdbaa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should approve the employee’s resignation as admin",
              "fullTitle": "Backend API Tests for Employee and Admin Role should approve the employee’s resignation as admin",
              "timedOut": null,
              "duration": 620,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const token = Cypress.env(\"adminAuthToken\"); // Retrieve admin token from Cypress environment variable\ncy.request({\n  method: \"PUT\",\n  url: `${apiUrl}/admin/conclude_resignation`,\n  headers: {\n    Authorization: `${token}`\n  },\n  body: {\n    resignationId: employeeResignationId,\n    approved: true,\n    lwd: \"2024-12-26\"\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {
                "message": "CypressError: `cy.request()` failed on:\n\nhttp://localhost:8080/api/admin/conclude_resignation\n\nThe response we received from your web server was:\n\n  > 404: Not Found\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: PUT\nURL: http://localhost:8080/api/admin/conclude_resignation\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Authorization\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2ODhkZWMzMDdkN2RkN2Q2NzZlNjFhMzkiLCJyb2xlIjoiYWRtaW4iLCJpYXQiOjE3NTQxMzE1NTMsImV4cCI6MTc1NDIxNzk1M30._xoq6E69Zu3_1YSBU5UhZNod0mA690TQ4fCYduuSKLc\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/13.17.0 Chrome/118.0.5993.159 Electron/27.3.10 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 57\n}\nBody: {\"resignationId\":null,\"approved\":true,\"lwd\":\"2024-12-26\"}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 404 - Not Found\nHeaders: {\n  \"x-powered-by\": \"Express\",\n  \"access-control-allow-origin\": \"*\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"35\",\n  \"etag\": \"W/\\\"23-veBhkv7SKMBZ9UX6y+1nVvLibiA\\\"\",\n  \"date\": \"Sat, 02 Aug 2025 10:45:53 GMT\",\n  \"connection\": \"keep-alive\",\n  \"keep-alive\": \"timeout=5\"\n}\nBody: {\n  \"message\": \"Resignation not found\"\n}\n\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` failed on:\n\nhttp://localhost:8080/api/admin/conclude_resignation\n\nThe response we received from your web server was:\n\n  > 404: Not Found\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: PUT\nURL: http://localhost:8080/api/admin/conclude_resignation\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Authorization\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2ODhkZWMzMDdkN2RkN2Q2NzZlNjFhMzkiLCJyb2xlIjoiYWRtaW4iLCJpYXQiOjE3NTQxMzE1NTMsImV4cCI6MTc1NDIxNzk1M30._xoq6E69Zu3_1YSBU5UhZNod0mA690TQ4fCYduuSKLc\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/13.17.0 Chrome/118.0.5993.159 Electron/27.3.10 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 57\n}\nBody: {\"resignationId\":null,\"approved\":true,\"lwd\":\"2024-12-26\"}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 404 - Not Found\nHeaders: {\n  \"x-powered-by\": \"Express\",\n  \"access-control-allow-origin\": \"*\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"35\",\n  \"etag\": \"W/\\\"23-veBhkv7SKMBZ9UX6y+1nVvLibiA\\\"\",\n  \"date\": \"Sat, 02 Aug 2025 10:45:53 GMT\",\n  \"connection\": \"keep-alive\",\n  \"keep-alive\": \"timeout=5\"\n}\nBody: {\n  \"message\": \"Resignation not found\"\n}\n\n\nhttps://on.cypress.io/request\n    at <unknown> (http://localhost:8080/__cypress/runner/cypress_runner.js:132876:72)\n    at tryCatcher (http://localhost:8080/__cypress/runner/cypress_runner.js:1830:23)\n    at Promise._settlePromiseFromHandler (http://localhost:8080/__cypress/runner/cypress_runner.js:1542:31)\n    at Promise._settlePromise (http://localhost:8080/__cypress/runner/cypress_runner.js:1599:18)\n    at Promise._settlePromise0 (http://localhost:8080/__cypress/runner/cypress_runner.js:1644:10)\n    at Promise._settlePromises (http://localhost:8080/__cypress/runner/cypress_runner.js:1724:18)\n    at _drainQueueStep (http://localhost:8080/__cypress/runner/cypress_runner.js:2430:12)\n    at _drainQueue (http://localhost:8080/__cypress/runner/cypress_runner.js:2423:9)\n    at Async._drainQueues (http://localhost:8080/__cypress/runner/cypress_runner.js:2439:5)\n    at Async.drainQueues (http://localhost:8080/__cypress/runner/cypress_runner.js:2309:14)\nFrom Your Spec Code:\n    at Context.eval (webpack://assessment/./cypress/integration/backend/backendTests.spec.js:77:7)",
                "diff": null
              },
              "uuid": "1ea17492-77ce-4bbc-829b-cc2b88338b6f",
              "parentUUID": "479ffb9c-6a66-4b98-a33c-d4750cfbdbaa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should allow the employee to submit responses to exit questionnaire",
              "fullTitle": "Backend API Tests for Employee and Admin Role should allow the employee to submit responses to exit questionnaire",
              "timedOut": null,
              "duration": 575,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const token = Cypress.env(\"employeeAuthToken\"); // Retrieve employee token from Cypress environment variable\ncy.request({\n  method: \"POST\",\n  url: `${apiUrl}/user/responses`,\n  headers: {\n    Authorization: `${token}`\n  },\n  body: {\n    responses: [{\n      questionText: \"What prompted you to start looking for another job?\",\n      response: \"Lack of career growth opportunities\"\n    }, {\n      questionText: \"Would you recommend this company to others?\",\n      response: \"Yes, with some reservations\"\n    }]\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {
                "message": "CypressError: `cy.request()` failed on:\n\nhttp://localhost:8080/api/user/responses\n\nThe response we received from your web server was:\n\n  > 403: Forbidden\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: http://localhost:8080/api/user/responses\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Authorization\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2ODhkZWM1ZjdkN2RkN2Q2NzZlNjFhM2MiLCJyb2xlIjoiZW1wbG95ZWUiLCJpYXQiOjE3NTQxMzE1NTEsImV4cCI6MTc1NDIxNzk1MX0.7gcxunV0P4tz2_xcUxBExnTSfdq7uUEaYy5HVpw4oIY\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/13.17.0 Chrome/118.0.5993.159 Electron/27.3.10 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 239\n}\nBody: {\"responses\":[{\"questionText\":\"What prompted you to start looking for another job?\",\"response\":\"Lack of career growth opportunities\"},{\"questionText\":\"Would you recommend this company to others?\",\"response\":\"Yes, with some reservations\"}]}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 403 - Forbidden\nHeaders: {\n  \"x-powered-by\": \"Express\",\n  \"access-control-allow-origin\": \"*\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"82\",\n  \"etag\": \"W/\\\"52-uaFpK9yhhX5tCzRNJWL9wTKeGGA\\\"\",\n  \"date\": \"Sat, 02 Aug 2025 10:45:54 GMT\",\n  \"connection\": \"keep-alive\",\n  \"keep-alive\": \"timeout=5\"\n}\nBody: {\n  \"message\": \"You cannot submit an exit interview without an approved resignation.\"\n}\n\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` failed on:\n\nhttp://localhost:8080/api/user/responses\n\nThe response we received from your web server was:\n\n  > 403: Forbidden\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: http://localhost:8080/api/user/responses\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Authorization\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2ODhkZWM1ZjdkN2RkN2Q2NzZlNjFhM2MiLCJyb2xlIjoiZW1wbG95ZWUiLCJpYXQiOjE3NTQxMzE1NTEsImV4cCI6MTc1NDIxNzk1MX0.7gcxunV0P4tz2_xcUxBExnTSfdq7uUEaYy5HVpw4oIY\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/13.17.0 Chrome/118.0.5993.159 Electron/27.3.10 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 239\n}\nBody: {\"responses\":[{\"questionText\":\"What prompted you to start looking for another job?\",\"response\":\"Lack of career growth opportunities\"},{\"questionText\":\"Would you recommend this company to others?\",\"response\":\"Yes, with some reservations\"}]}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 403 - Forbidden\nHeaders: {\n  \"x-powered-by\": \"Express\",\n  \"access-control-allow-origin\": \"*\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"82\",\n  \"etag\": \"W/\\\"52-uaFpK9yhhX5tCzRNJWL9wTKeGGA\\\"\",\n  \"date\": \"Sat, 02 Aug 2025 10:45:54 GMT\",\n  \"connection\": \"keep-alive\",\n  \"keep-alive\": \"timeout=5\"\n}\nBody: {\n  \"message\": \"You cannot submit an exit interview without an approved resignation.\"\n}\n\n\nhttps://on.cypress.io/request\n    at <unknown> (http://localhost:8080/__cypress/runner/cypress_runner.js:132876:72)\n    at tryCatcher (http://localhost:8080/__cypress/runner/cypress_runner.js:1830:23)\n    at Promise._settlePromiseFromHandler (http://localhost:8080/__cypress/runner/cypress_runner.js:1542:31)\n    at Promise._settlePromise (http://localhost:8080/__cypress/runner/cypress_runner.js:1599:18)\n    at Promise._settlePromise0 (http://localhost:8080/__cypress/runner/cypress_runner.js:1644:10)\n    at Promise._settlePromises (http://localhost:8080/__cypress/runner/cypress_runner.js:1724:18)\n    at _drainQueueStep (http://localhost:8080/__cypress/runner/cypress_runner.js:2430:12)\n    at _drainQueue (http://localhost:8080/__cypress/runner/cypress_runner.js:2423:9)\n    at Async._drainQueues (http://localhost:8080/__cypress/runner/cypress_runner.js:2439:5)\n    at Async.drainQueues (http://localhost:8080/__cypress/runner/cypress_runner.js:2309:14)\nFrom Your Spec Code:\n    at Context.eval (webpack://assessment/./cypress/integration/backend/backendTests.spec.js:97:7)",
                "diff": null
              },
              "uuid": "6c5b28e0-8715-45d9-bf34-d60019f878ba",
              "parentUUID": "479ffb9c-6a66-4b98-a33c-d4750cfbdbaa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should allow the admin to view all questionnaire responses",
              "fullTitle": "Backend API Tests for Employee and Admin Role should allow the admin to view all questionnaire responses",
              "timedOut": null,
              "duration": 637,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const token = Cypress.env(\"adminAuthToken\"); // Retrieve admin token from Cypress environment variable\ncy.request({\n  method: \"GET\",\n  url: `${apiUrl}/admin/exit_responses`,\n  headers: {\n    Authorization: `${token}`\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body.data).to.be.an(\"array\");\n  // Find the specific response data that matches the expected responses\n  const expectedResponses = [{\n    questionText: \"What prompted you to start looking for another job?\",\n    response: \"Lack of career growth opportunities\"\n  }, {\n    questionText: \"Would you recommend this company to others?\",\n    response: \"Yes, with some reservations\"\n  }];\n  // Check if any of the data array includes the expected responses\n  const hasExpectedResponses = response.body.data.some(item => {\n    return item.responses.length === expectedResponses.length && item.responses.every((resp, index) => {\n      return resp.questionText === expectedResponses[index].questionText && resp.response === expectedResponses[index].response;\n    });\n  });\n  // Assert that the expected responses exist in the data\n  expect(hasExpectedResponses).to.be.true;\n});",
              "err": {
                "message": "AssertionError: expected false to be true",
                "estack": "AssertionError: expected false to be true\n    at Context.eval (webpack://assessment/./cypress/integration/backend/backendTests.spec.js:159:41)",
                "diff": null
              },
              "uuid": "da474a8a-3245-4b97-bee7-8ba0775854bd",
              "parentUUID": "479ffb9c-6a66-4b98-a33c-d4750cfbdbaa",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "95b12bca-3787-444a-b4f0-442c883e6f13",
            "71b9a879-84b6-4593-a0f0-cfc58a361d60",
            "be7e0b1f-e07f-427d-818a-5d9725d69179",
            "338f84c3-56f4-45e7-afbb-4ed95572d1df"
          ],
          "failures": [
            "35f3aea0-95d3-49b4-a126-0742769decc1",
            "1ea17492-77ce-4bbc-829b-cc2b88338b6f",
            "6c5b28e0-8715-45d9-bf34-d60019f878ba",
            "da474a8a-3245-4b97-bee7-8ba0775854bd"
          ],
          "pending": [],
          "skipped": [],
          "duration": 4450,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "my-report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "charts": true,
        "json": true,
        "reportsDir": "reports/your-reports-folder",
        "reportFilename": "my-report",
        "overwrite": false
      },
      "version": "6.2.0"
    }
  }
}